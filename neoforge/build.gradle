import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    id("com.modrinth.minotaur")
}

base {
    archivesName = "${mod_id_jar}-NeoForge"
}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        data {
            clientData()

            programArguments.addAll '--mod', project.mod_id, '--all', '--output', project.project(':common').file('src/generated/resources/').getAbsolutePath(), '--existing', project.project(':common').file('src/main/resources/').getAbsolutePath()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    compileOnly("maven.modrinth:iron-chests:${ironchest_version}")
}

sourceSets.main.resources { srcDir project.project(':common').file('src/generated/resources/').getAbsolutePath() }

tasks.register('publishCurseForge', TaskPublishCurseForge) {
    group = "publishing"
    dependsOn(tasks.jar)
    apiToken = System.getenv("CURSEFORGE_TOKEN")

    def projectId = findProperty('curseforge_project_id')

    def mainFile = upload(projectId, tasks.jar.archiveFile)
    mainFile.changelog = file('../changelog.md')
    mainFile.displayName = findProperty('mod_name') + ' NeoForge ' + findProperty('version')
    mainFile.releaseType = 'release'
    mainFile.addModLoader("NeoForge")
    mainFile.addEnvironment("Client")
    mainFile.addJavaVersion("Java 21")
}

modrinth {
    token.set(System.getenv("MODRINTH_TOKEN"))
    projectId.set(findProperty('modrinth_project_id'))
    changelog.set(file('../changelog.md').text)
    versionName.set(findProperty('mod_name') + ' NeoForge ' + findProperty('version'))
    versionType.set("release")
    uploadFile.set(tasks.jar)
    gameVersions = [
            findProperty("minecraft_version")
    ]

    dependencies {

    }
}
tasks.modrinth.dependsOn(tasks.jar)