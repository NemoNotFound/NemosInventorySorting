import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
    id("com.modrinth.minotaur")
}

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modCompileOnly("maven.modrinth:nemos-backpacks:${nemos_backpacks_version}")
}

base {
    archivesName = "${mod_id_jar}-Fabric"
}

loom {
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}

sourceSets.main.resources { srcDir project.project(':common').file('src/generated/resources/').getAbsolutePath() }

tasks.register('publishCurseForge', TaskPublishCurseForge) {
    dependsOn(tasks.remapJar)
    apiToken = System.getenv("CURSEFORGE_TOKEN")

    def projectId = findProperty('curseforge_project_id')

    def mainFile = upload(projectId, tasks.remapJar.archiveFile)
    mainFile.changelog = file('../changelog.md')
    mainFile.displayName = findProperty('mod_name') + ' Fabric ' + findProperty('version')
    mainFile.releaseType = 'release'
    mainFile.addEnvironment("Client")
    mainFile.addJavaVersion("Java 21")
    mainFile.addRequirement("fabric-api")
}

modrinth {
    token.set(System.getenv("MODRINTH_TOKEN"))
    projectId.set(findProperty('modrinth_project_id'))
    changelog.set(file('../changelog.md').text)
    versionName.set(findProperty('mod_name') + ' Fabric ' + findProperty('version'))
    versionType.set("release")
    uploadFile.set(tasks.remapJar)
    dependencies {
        required.project("fabric-api")
    }
}
tasks.modrinth.dependsOn(tasks.remapJar)